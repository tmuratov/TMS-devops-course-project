jenkins:
  systemMessage: "Jenkins + JCasC + Job DSL (using seed job)"
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disableRememberMe: false
  disabledAdministrativeMonitors:
    - "jenkins.diagnostics.RootUrlNotSetMonitor"
  labelAtoms:
    - name: "builder-01"
    - name: "ssh-builder-01"
    - name: "git"
    - name: "java"
    - name: "maven"
    - name: "registry"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  nodeMonitors:
  - "architecture"
  - "clock"
  - diskSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "swapSpace"
  - tmpSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "responseTime"
  nodes:
  - permanent:
      name: "builder-01"
      labelString: "java maven git"
      launcher: "inbound"
      retentionStrategy: "always"
      remoteFS: "/home/jenkins"
  - permanent:
      name: "ssh-builder-01"
      labelString: "ssh registry"
      mode: "NORMAL"
      remoteFS: "/home/jenkins"
      launcher:
        ssh:
          host: "192.168.56.10"
          port: 2222
          credentialsId: "ssh-agent-creds"
          sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
  numExecutors: 0
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
      - id: "admin"
        name: "Admin Adminov"
        password: ${JENKINS_ADMIN_PASSWORD}
        properties:
        - "apiToken"
        - "consoleUrlProvider"
        - "myView"
        - "timezone"
        - "experimentalFlags"
        - "mailer"
        - preferredProvider:
            providerId: "default"
  slaveAgentPort: 50000
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"
appearance:
  prism:
    theme: PRISM
  themeManager:
    disableUserThemes: false
    theme: "dark"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  cps:
    hideSandbox: false
  scriptApproval:
    forceSandbox: false
unclassified:
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
tool:
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
  git:
    installations:
    - home: "git"
      name: "Default"
  jdk:
    installations:
    - home: "/opt/java/openjdk"
      name: "JDK17"
  maven:
    installations:
    - home: "/usr/share/maven"
      name: "Maven3"

credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              id: git-credentials
              username: "{{ github_user }}"
              password: "{{ github_token }}"
              description: "Git credentials for Job DSL"
          - basicSSHUserPrivateKey:
              id: "ssh-agent-creds"
              username: "jenkins"
              privateKeySource:
                directEntry:
                  privateKey: |
                    {{ master_private_key | indent(20) }}
              description: "SSH key for agent"

jobs:
  - script: >
      job('seed-job') {
        description('Seed job getting DSL jobs from Git')
        scm {
          git {
            remote {
              url('https://github.com/tmuratov/devops-sandbox.git')
              credentials('git-credentials')   // <-- Используем id из credentials
            }
            branches('lesson31-jcasc')
          }
        }
        steps {
          dsl {
            external('**/jobs/*.groovy')
            removeAction('DELETE')
            removeViewAction('DELETE')
            lookupStrategy('SEED_JOB')
          }
        }
      }
