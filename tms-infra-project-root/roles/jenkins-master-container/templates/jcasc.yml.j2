jenkins:
  systemMessage: "Jenkins + JCasC + Job DSL (using seed job)"
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: false
  disabledAdministrativeMonitors:
    - "jenkins.diagnostics.RootUrlNotSetMonitor"
  nodeMonitors:
  - "architecture"
  - "clock"
  - diskSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "swapSpace"
  - tmpSpace:
      freeSpaceThreshold: "1GiB"
      freeSpaceWarningThreshold: "2GiB"
  - "responseTime"

  nodes:
{% for agent in groups['jenkins_ssh_agents'] %}
  - permanent:
      name: "ssh-{{ agent }}"
      labelString: "{{ hostvars[agent]['agent_label_string'] }}"
      mode: "NORMAL"
      remoteFS: {{ agent_home_dir }}
      launcher:
        ssh:
          host: {{ hostvars[agent]['ansible_host'] }}
          port: {{ ssh_slave_listening_port }}
          credentialsId: "ssh-agent-creds"
          sshHostKeyVerificationStrategy: "nonVerifyingKeyVerificationStrategy"
{% endfor %}

  numExecutors: 0
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
      - id: "admin"
        name: "Admin Adminov"
        password: ${JENKINS_ADMIN_PASSWORD}
        properties:
        - "apiToken"
        - "consoleUrlProvider"
        - "myView"
        - "timezone"
        - "experimentalFlags"
        - "mailer"
        - preferredProvider:
            providerId: "default"
  slaveAgentPort: {{ jenkins_agent_port }}
  updateCenter:
    sites:
    - id: "default"
      url: "https://updates.jenkins.io/update-center.json"
  views:
  - all:
      name: "all"
  viewsTabBar: "standard"
globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"
appearance:
  prism:
    theme: PRISM
  themeManager:
    disableUserThemes: false
    theme: "dark"
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  cps:
    hideSandbox: false
  scriptApproval:
    forceSandbox: false
unclassified:
  buildDiscarders:
    configuredBuildDiscarders:
    - "jobBuildDiscarder"
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  location:
    adminAddress: "address not configured yet <nobody@nowhere>"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pollSCM:
    pollingThreadCount: 10
#  githubPluginConfig:
#    hookUrl: "{{ jenkins_master_secure_url}}/github-webhook/"
tool:
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
  git:
    installations:
    - home: "/usr/bin/git"
      name: "Default"
  jdk:
    installations:
    - home: "/usr/lib/jvm/java-21-openjdk-amd64"
      name: "JDK21"
  maven:
    installations:
    - home: "/usr/share/maven"
      name: "Maven3"

credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              id: git-credentials
              username: "{{ github_user }}"
              password: "{{ github_token }}"
              description: "Git credentials for Job DSL"
          - basicSSHUserPrivateKey:
              id: "ssh-agent-creds"
              username: "jenkins"
              privateKeySource:
                directEntry:
                  privateKey: |
                    {{ master_private_key | indent(20) }}
              description: "SSH key for agent"
          - string:
              scope: GLOBAL
              id: "telegram-bot-token"
              secret: "${TELEGRAM_BOT_TOKEN}"
          - string:
              scope: GLOBAL
              id: "telegram-chat-id"
              secret: "${TELEGRAM_CHAT_ID}"

jobs:
  - script: >
      job('seed-job') {
        label('idler')
        description('Seed job getting DSL jobs from Git')
        scm {
          git {
            remote {
              url('{{ jenkins_dsl_git_repo_raw }}')
              credentials('git-credentials')   // <-- use id from credentials above
            }
            branches('{{ jenkins_dsl_git_branch }}')
          }
        }
        steps {
          dsl {
            external('**/jobs/*.groovy')
            removeAction('DELETE')
            removeViewAction('DELETE')
            lookupStrategy('SEED_JOB')
          }
        }
        triggers {
          scm('H/2 * * * *')  // poll every minute (for debugging period, will be increased)
          // githubPush()     // not usable in current setup (NAT), for future use
        }

        publishers {
          postBuildTask {
          task(
              'not yet approved for use',
              '''
                curl -s -X POST https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage \\
                    -d chat_id=${TELEGRAM_CHAT_ID} \\
                    -d text="🚨 Jenkins SEED JOB: Требуется аппрув скриптов!" \\
                    -d parse_mode=Markdown
              '''.stripIndent(),
              true
            )
          }
        }
      }
